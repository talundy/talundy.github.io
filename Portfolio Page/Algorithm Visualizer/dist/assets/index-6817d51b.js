var J=Object.defineProperty;var Z=(c,e,t)=>e in c?J(c,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):c[e]=t;var y=(c,e,t)=>(Z(c,typeof e!="symbol"?e+"":e,t),t);import{r as l,a as Q,R as X}from"./vendor-b1791c80.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))a(n);new MutationObserver(n=>{for(const o of n)if(o.type==="childList")for(const r of o.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&a(r)}).observe(document,{childList:!0,subtree:!0});function t(n){const o={};return n.integrity&&(o.integrity=n.integrity),n.referrerPolicy&&(o.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?o.credentials="include":n.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function a(n){if(n.ep)return;n.ep=!0;const o=t(n);fetch(n.href,o)}})();var V={exports:{}},j={};/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var ee=l,te=Symbol.for("react.element"),se=Symbol.for("react.fragment"),re=Object.prototype.hasOwnProperty,ae=ee.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,ie={key:!0,ref:!0,__self:!0,__source:!0};function q(c,e,t){var a,n={},o=null,r=null;t!==void 0&&(o=""+t),e.key!==void 0&&(o=""+e.key),e.ref!==void 0&&(r=e.ref);for(a in e)re.call(e,a)&&!ie.hasOwnProperty(a)&&(n[a]=e[a]);if(c&&c.defaultProps)for(a in e=c.defaultProps,e)n[a]===void 0&&(n[a]=e[a]);return{$$typeof:te,type:c,key:o,ref:r,props:n,_owner:ae.current}}j.Fragment=se;j.jsx=q;j.jsxs=q;V.exports=j;var s=V.exports,R={},G=Q;R.createRoot=G.createRoot,R.hydrateRoot=G.hydrateRoot;class ne{constructor(){y(this,"metadata",{name:"Merge Sort",description:"A divide-and-conquer algorithm that recursively splits the array, sorts the subarrays, and merges them back together.",timeComplexity:{best:"O(n log n)",average:"O(n log n)",worst:"O(n log n)"},spaceComplexity:"O(n)",stable:!0,inPlace:!1})}validate(e){const t=[];return(!e.array||e.array.length===0)&&t.push({field:"array",message:"Array must not be empty"}),e.array&&e.array.some(a=>typeof a!="number"||!Number.isFinite(a))&&t.push({field:"array",message:"Array must contain only finite numbers"}),t}*trace(e){const t=[...e.array],a=t.length;if(a<=1){yield{type:"mark",indices:[0],state:"sorted"};return}yield*this.mergeSortTrace(t,0,a-1)}*mergeSortTrace(e,t,a){if(t<a){const n=Math.floor((t+a)/2);yield{type:"split",indices:[n],metadata:{left:t,right:a,mid:n}},yield*this.mergeSortTrace(e,t,n),yield*this.mergeSortTrace(e,n+1,a),yield*this.mergeTrace(e,t,n,a)}else t===a&&(yield{type:"mark",indices:[t],state:"sorted"})}*mergeTrace(e,t,a,n){const o=e.slice(t,a+1),r=e.slice(a+1,n+1);let h=0,d=0,u=t;for(yield{type:"mark",indices:Array.from({length:n-t+1},(g,v)=>t+v),state:"active"};h<o.length&&d<r.length;)yield{type:"compare",indices:[t+h,a+1+d],values:[o[h],r[d]]},o[h]<=r[d]?(e[u]=o[h],yield{type:"swap",indices:[u],values:[o[h]]},h++):(e[u]=r[d],yield{type:"swap",indices:[u],values:[r[d]]},d++),u++;for(;h<o.length;)e[u]=o[h],yield{type:"swap",indices:[u],values:[o[h]]},h++,u++;for(;d<r.length;)e[u]=r[d],yield{type:"swap",indices:[u],values:[r[d]]},d++,u++;yield{type:"mark",indices:Array.from({length:n-t+1},(g,v)=>t+v),state:"sorted"}}}const U={mergeSort:new ne},b=c=>U[c],ce=()=>Object.keys(U);class oe{constructor(e,t){y(this,"state");y(this,"animationFrameId",null);y(this,"lastFrameTime",0);y(this,"onStateChange");y(this,"onMetricsChange");this.onStateChange=e,this.onMetricsChange=t,this.state={isPlaying:!1,currentStep:0,totalSteps:0,speed:1,operations:[],currentArray:[],originalArray:[]}}setArray(e){this.state.originalArray=[...e],this.state.currentArray=[...e],this.state.operations=[],this.state.currentStep=0,this.state.totalSteps=0,this.updateState()}setOperations(e){this.state.operations=e,this.state.totalSteps=e.length,this.state.currentStep=0,this.updateState()}play(){this.state.currentStep>=this.state.totalSteps&&this.reset(),this.state.isPlaying=!0,this.lastFrameTime=performance.now(),this.animate(),this.updateState()}pause(){this.state.isPlaying=!1,this.animationFrameId&&(cancelAnimationFrame(this.animationFrameId),this.animationFrameId=null),this.updateState()}reset(){this.pause(),this.state.currentStep=0,this.state.currentArray=[...this.state.originalArray],this.updateState(),this.updateMetrics()}stepForward(){this.state.currentStep<this.state.totalSteps&&(this.executeStep(this.state.currentStep),this.state.currentStep++,this.updateState(),this.updateMetrics())}stepBackward(){this.state.currentStep>0&&(this.state.currentStep--,this.revertToStep(this.state.currentStep),this.updateState(),this.updateMetrics())}setSpeed(e){this.state.speed=Math.max(.25,Math.min(4,e)),this.updateState()}animate(){if(!this.state.isPlaying)return;const e=performance.now(),t=e-this.lastFrameTime,a=1e3/this.state.speed;if(t>=a)if(this.state.currentStep<this.state.totalSteps)this.stepForward(),this.lastFrameTime=e;else{this.pause();return}this.animationFrameId=requestAnimationFrame(()=>this.animate())}executeStep(e){if(e>=this.state.operations.length)return;const t=this.state.operations[e];this.applyOperation(t)}applyOperation(e){switch(e.type){case"swap":e.indices.length===1&&e.values&&e.values.length===1&&(this.state.currentArray[e.indices[0]]=e.values[0]);break;case"mark":break;case"compare":break;case"merge":e.values&&e.indices.forEach((t,a)=>{e.values&&e.values[a]!==void 0&&(this.state.currentArray[t]=e.values[a])});break}}revertToStep(e){this.state.currentArray=[...this.state.originalArray];for(let t=0;t<e;t++)this.executeStep(t)}updateState(){this.onStateChange({...this.state})}updateMetrics(){const e={comparisons:this.countOperations("compare"),swaps:this.countOperations("swap"),elapsedTime:this.state.currentStep,currentStep:this.state.currentStep,totalSteps:this.state.totalSteps};this.onMetricsChange(e)}countOperations(e){return this.state.operations.slice(0,this.state.currentStep).filter(t=>t.type===e).length}getState(){return{...this.state}}destroy(){this.pause()}}class le{constructor(e,t){y(this,"svg");y(this,"config");y(this,"barElements",[]);this.config=t,this.svg=this.createSVG(),e.appendChild(this.svg)}createSVG(){const e=document.createElementNS("http://www.w3.org/2000/svg","svg");return e.setAttribute("width",this.config.width.toString()),e.setAttribute("height",this.config.height.toString()),e.style.display="block",e.style.margin="0 auto",e}render(e,t,a){this.clearBars(),this.createBars(e),this.applyOperations(t,a)}clearBars(){this.barElements.forEach(e=>e.remove()),this.barElements=[]}createBars(e){const t=Math.max(...e),a=this.config.height*.8;e.forEach((n,o)=>{const r=document.createElementNS("http://www.w3.org/2000/svg","rect"),h=o*(this.config.barWidth+this.config.barSpacing),d=n/t*a,u=this.config.height-d;r.setAttribute("x",h.toString()),r.setAttribute("y",u.toString()),r.setAttribute("width",this.config.barWidth.toString()),r.setAttribute("height",d.toString()),r.setAttribute("fill",this.config.colors.default),r.setAttribute("stroke","#333"),r.setAttribute("stroke-width","1");const g=document.createElementNS("http://www.w3.org/2000/svg","text");g.setAttribute("x",(h+this.config.barWidth/2).toString()),g.setAttribute("y",(u-5).toString()),g.setAttribute("text-anchor","middle"),g.setAttribute("font-size","12"),g.setAttribute("fill","#333"),g.textContent=n.toString(),this.svg.appendChild(r),this.svg.appendChild(g),this.barElements.push(r)})}applyOperations(e,t){this.barElements.forEach(a=>{a.setAttribute("fill",this.config.colors.default)});for(let a=0;a<t&&a<e.length;a++){const n=e[a];this.applyOperation(n)}}applyOperation(e){switch(e.type){case"compare":e.indices.forEach(t=>{this.barElements[t]&&this.barElements[t].setAttribute("fill",this.config.colors.comparing)});break;case"swap":e.indices.forEach(t=>{this.barElements[t]&&this.barElements[t].setAttribute("fill",this.config.colors.swapping)});break;case"mark":e.indices.forEach(t=>{if(this.barElements[t]){const a=e.state==="sorted"?this.config.colors.sorted:e.state==="active"?this.config.colors.active:this.config.colors.merged;this.barElements[t].setAttribute("fill",a)}});break;case"merge":e.indices.forEach(t=>{this.barElements[t]&&this.barElements[t].setAttribute("fill",this.config.colors.merged)});break}}resize(e,t){this.config.width=e,this.config.height=t,this.svg.setAttribute("width",e.toString()),this.svg.setAttribute("height",t.toString())}destroy(){this.svg.remove()}}const O=(c,e=1,t=100)=>Array.from({length:c},()=>Math.floor(Math.random()*(t-e+1))+e),M=(c,e=1,t=100)=>O(c,e,t).sort((a,n)=>a-n),he=(c,e=1,t=100)=>M(c,e,t).reverse(),de=(c,e=1,t=100,a=3)=>{const n=M(c,e,t);for(let o=0;o<a;o++){const r=Math.floor(Math.random()*c),h=Math.floor(Math.random()*c);[n[r],n[h]]=[n[h],n[r]]}return n},ue=(c,e=1,t=50)=>{const a=Math.min(t-e+1,Math.floor(c/2)),n=O(a,e,t),o=[];for(let r=0;r<c;r++)o.push(n[r%a]);for(let r=o.length-1;r>0;r--){const h=Math.floor(Math.random()*(r+1));[o[r],o[h]]=[o[h],o[r]]}return o},pe=()=>{var F,T,_,I,L,B,D,W;const[c,e]=l.useState("mergeSort"),[t,a]=l.useState(20),[n,o]=l.useState([]),[r,h]=l.useState(null),[d,u]=l.useState(null),[g,v]=l.useState(!1),A=l.useRef(null),p=l.useRef(null),x=l.useRef(null);l.useEffect(()=>{if(A.current&&!x.current){const i={width:800,height:400,barWidth:30,barSpacing:5,colors:{default:"#4a90e2",active:"#f39c12",sorted:"#27ae60",comparing:"#e74c3c",swapping:"#9b59b6",merged:"#2ecc71"}};x.current=new le(A.current,i)}return()=>{var i;(i=x.current)==null||i.destroy()}},[]),l.useEffect(()=>(p.current||(p.current=new oe(i=>h(i),i=>u(i))),()=>{var i;(i=p.current)==null||i.destroy()}),[]),l.useEffect(()=>{P()},[t]);const P=l.useCallback(()=>{v(!0);const i=Array.from({length:t},()=>Math.floor(Math.random()*100)+1);o(i),p.current&&(p.current.setArray(i),S(i)),v(!1)},[t]),S=l.useCallback(i=>{const m=b(c);if(!m||!p.current)return;const f=m.validate({array:i});if(f.length>0){console.error("Validation errors:",f);return}const z=[];for(const K of m.trace({array:i}))z.push(K);p.current.setOperations(z)},[c]),$=l.useCallback(i=>{e(i),p.current&&n.length>0&&S(n)},[n,S]),Y=l.useCallback(i=>{a(i)},[]),w=l.useCallback(()=>{var i;(i=p.current)==null||i.play()},[]),k=l.useCallback(()=>{var i;(i=p.current)==null||i.pause()},[]),C=l.useCallback(()=>{var i;(i=p.current)==null||i.reset()},[]),N=l.useCallback(()=>{var i;(i=p.current)==null||i.stepForward()},[]),E=l.useCallback(()=>{var i;(i=p.current)==null||i.stepBackward()},[]),H=l.useCallback(i=>{var m;(m=p.current)==null||m.setSpeed(i)},[]);return l.useEffect(()=>{x.current&&r&&n.length>0&&x.current.render(r.currentArray,r.operations,r.currentStep)},[r,n]),l.useEffect(()=>{const i=m=>{switch(m.key){case" ":m.preventDefault(),r!=null&&r.isPlaying?k():w();break;case"ArrowRight":m.preventDefault(),N();break;case"ArrowLeft":m.preventDefault(),E();break;case"r":case"R":m.preventDefault(),C();break}};return window.addEventListener("keydown",i),()=>window.removeEventListener("keydown",i)},[r,w,k,N,E,C]),s.jsxs("div",{className:"algorithm-visualizer",children:[s.jsxs("div",{className:"controls-panel",children:[s.jsxs("div",{className:"control-group",children:[s.jsx("label",{htmlFor:"algorithm-select",children:"Algorithm:"}),s.jsx("select",{id:"algorithm-select",value:c,onChange:i=>$(i.target.value),children:ce().map(i=>s.jsx("option",{value:i,children:i.charAt(0).toUpperCase()+i.slice(1).replace(/([A-Z])/g," $1")},i))})]}),s.jsxs("div",{className:"control-group",children:[s.jsx("label",{htmlFor:"array-size",children:"Array Size:"}),s.jsx("input",{id:"array-size",type:"range",min:"5",max:"100",value:t,onChange:i=>Y(parseInt(i.target.value))}),s.jsx("span",{children:t})]}),s.jsxs("div",{className:"control-group",children:[s.jsx("label",{htmlFor:"array-pattern",children:"Pattern:"}),s.jsxs("select",{id:"array-pattern",value:"random",onChange:i=>{const m=i.target.value;let f;switch(m){case"sorted":f=M(t);break;case"reversed":f=he(t);break;case"nearly-sorted":f=de(t);break;case"duplicates":f=ue(t);break;default:f=O(t)}o(f),p.current&&(p.current.setArray(f),S(f))},children:[s.jsx("option",{value:"random",children:"Random"}),s.jsx("option",{value:"sorted",children:"Sorted"}),s.jsx("option",{value:"reversed",children:"Reversed"}),s.jsx("option",{value:"nearly-sorted",children:"Nearly Sorted"}),s.jsx("option",{value:"duplicates",children:"With Duplicates"})]})]}),s.jsx("div",{className:"control-group",children:s.jsx("button",{onClick:P,disabled:g,children:g?"Generating...":"Generate New Array"})})]}),s.jsx("div",{className:"visualization-container",ref:A}),s.jsxs("div",{className:"playback-controls",children:[s.jsxs("div",{className:"control-group",children:[s.jsx("button",{onClick:E,disabled:!r||r.currentStep===0,children:"⏮"}),s.jsx("button",{onClick:r!=null&&r.isPlaying?k:w,children:r!=null&&r.isPlaying?"⏸":"▶"}),s.jsx("button",{onClick:N,disabled:!r||r.currentStep>=((r==null?void 0:r.totalSteps)||0),children:"⏭"}),s.jsx("button",{onClick:C,children:"🔄"})]}),s.jsxs("div",{className:"control-group",children:[s.jsx("label",{htmlFor:"speed-slider",children:"Speed:"}),s.jsx("input",{id:"speed-slider",type:"range",min:"0.25",max:"4",step:"0.25",value:(r==null?void 0:r.speed)||1,onChange:i=>H(parseFloat(i.target.value))}),s.jsxs("span",{children:[(r==null?void 0:r.speed)||1,"x"]})]})]}),d&&s.jsxs("div",{className:"metrics-panel",children:[s.jsxs("div",{className:"metric",children:[s.jsx("span",{className:"metric-label",children:"Step:"}),s.jsxs("span",{className:"metric-value",children:[d.currentStep," / ",d.totalSteps]})]}),s.jsxs("div",{className:"metric",children:[s.jsx("span",{className:"metric-label",children:"Comparisons:"}),s.jsx("span",{className:"metric-value",children:d.comparisons})]}),s.jsxs("div",{className:"metric",children:[s.jsx("span",{className:"metric-label",children:"Swaps:"}),s.jsx("span",{className:"metric-value",children:d.swaps})]})]}),c&&s.jsxs("div",{className:"algorithm-info-panel",children:[s.jsx("h3",{children:"Algorithm Information"}),s.jsxs("div",{className:"algorithm-details",children:[s.jsxs("div",{className:"detail-item",children:[s.jsx("strong",{children:"Name:"})," ",(F=b(c))==null?void 0:F.metadata.name]}),s.jsxs("div",{className:"detail-item",children:[s.jsx("strong",{children:"Description:"})," ",(T=b(c))==null?void 0:T.metadata.description]}),s.jsxs("div",{className:"detail-item",children:[s.jsx("strong",{children:"Time Complexity:"}),s.jsxs("span",{className:"complexity",children:["Best: ",(_=b(c))==null?void 0:_.metadata.timeComplexity.best," | Average: ",(I=b(c))==null?void 0:I.metadata.timeComplexity.average," | Worst: ",(L=b(c))==null?void 0:L.metadata.timeComplexity.worst]})]}),s.jsxs("div",{className:"detail-item",children:[s.jsx("strong",{children:"Space Complexity:"})," ",(B=b(c))==null?void 0:B.metadata.spaceComplexity]}),s.jsxs("div",{className:"detail-item",children:[s.jsx("strong",{children:"Stable:"})," ",(D=b(c))!=null&&D.metadata.stable?"Yes":"No"]}),s.jsxs("div",{className:"detail-item",children:[s.jsx("strong",{children:"In-Place:"})," ",(W=b(c))!=null&&W.metadata.inPlace?"Yes":"No"]})]})]}),s.jsxs("div",{className:"help-panel",children:[s.jsx("h3",{children:"How to Use"}),s.jsxs("ul",{children:[s.jsxs("li",{children:[s.jsx("strong",{children:"Space:"})," Play/Pause"]}),s.jsxs("li",{children:[s.jsx("strong",{children:"←/→:"})," Step backward/forward"]}),s.jsxs("li",{children:[s.jsx("strong",{children:"R:"})," Reset"]}),s.jsxs("li",{children:[s.jsx("strong",{children:"Speed slider:"})," Adjust animation speed"]})]}),s.jsx("p",{children:"Watch how the algorithm divides the array, sorts subarrays, and merges them back together!"})]})]})};R.createRoot(document.getElementById("root")).render(s.jsx(X.StrictMode,{children:s.jsx(pe,{})}));
//# sourceMappingURL=index-6817d51b.js.map
